TEM O REPLITE QUE SERVE MUITO BEM OU CODE BLOCKS

1 -
#include <stdio.h>

int parametro(int numero) {
    if (numero < 0) {
        return -1;
    } else if (numero == 0) {
        return 0;
    } else {
        return 1;
    }
}
int main (){
int numero=-10;
  printf("Testa numero: %d",parametro(numero));
  
}
// quando estivermos usando if: nunca usar return pois pode dar bug no código, mas se você usou return lembrar de usar o else para não dar bug

2- 
#include <stdio.h>

int comparar_numeros(int numero1, int numero2) {
    if (numero1 < numero2) {
        return -1;
    } else if (numero1 == numero2) {
        return 0;
    } else {
        return 1;
    }
}

int main() {
    int numero1 = -10;
    int numero2 = 5;

    printf("Resultado: %d\n", comparar_numeros(numero1, numero2));
    return 0;
}
// quando estivermos usando if: nunca usar return pois pode dar bug no código, mas se você usou return lembrar de usar o else para não dar bug

ou

2-
#include <stdio.h>

int comparar_numeros(int x, int y) {
  int retorno = 999;
    if (x > y) {
        retorno=1;
    } else if (x == y) {
        retorno=0;
  }else{
    retorno = -1;
  }
         return retorno;
}

int main() {
       printf("Resultado: %d", comparar_numeros(2,3));
  
}
// bota retorno = alguma coisa para inicilizar, o 999 é um valor absurdo para quando o codigo executar ele passar em todas as linhas de código

3- 
int parOUimpar(int x) {
    if (x%2==0){
    return 1;
    }
  else{
    return -1;
  }
    }

int main() {
    int x=7;
    int retorno=parOUimpar(x);
    if(retorno ==1){
        printf("Numero par");
    }
  else {
    printf("Numero impar");
  }
    }
    
   4-
   
   #include <stdio.h>

float potencia (float base, float expoente){
  float potencia=base;
  for(int i=1; i<expoente;i++){
    potencia = potencia*base;
  }
  return potencia;
}

int main() {
        float base=3,expoente=10;
        printf("%f ^ %f = %f", base,expoente,potencia(base,expoente));
}


5- #include <stdio.h>

float media(float nota1, float nota2, float nota3) {
    float media = (nota1 + nota2 + nota3) / 3;
    return media;
}

int main() {
    float notas[]={10,8,9};
    printf("Média: %.f", media(notas[0],notas[1],notas[2]));
}

6- #include <stdio.h>
#define PI 3.14

double potencia(double base, double expoente) {
    double potencia=base;
  for(int i=1; i<expoente; i++){
    potencia=base*potencia;
}
    return potencia;
}
 double volumeEsfera(double raio) {
 return (4* PI * potencia(raio,3))/3;
 }

int main() {
    double raio = 2;
     
    printf("Volume da esfera: %f\n", volumeEsfera(raio));
    
}

7- #include <stdio.h>
// usa-se o "char*" pq ele sabe que vai voltar um vetor de caracteres
char* categoria(int idade) {
    if (idade >= 5 && idade <= 7) {
        return "INF A";  
    } else if (idade >= 8 && idade <= 10) {
        return "INF B";  
    } else if (idade >= 11 && idade <= 13) {
        return "JUN A";  
    } else if (idade >= 14 && idade <= 17) {
        return "JUN B";  
    } else if (idade>=18){
        return "ADULTO";  
    }else {
    return "  SEM IDADE PARA COMPETIR";
  }
}

int main() {
    int idade = 18;
     
    printf("Categoria do nadador: %s", categoria(idade));
    
    return 0;
}

9- #include <stdio.h>

long fatorial(long numero) {
  long fatorial = numero;
  numero = numero - 1;
  while (numero > 1) {
    fatorial = fatorial * numero;
    numero = numero - 1;
  }
  return fatorial;  
}

long fatorialRecursivo(long numero) {
  if (numero == 1) {
    return 1;
  } else {
    return numero * fatorialRecursivo(numero - 1);
  }
}

int main() {
  long numero = 5, resultado;
  resultado = fatorial(numero);
  printf("\n Fatorial de %ld: %ld", numero, resultado);

  resultado = fatorialRecursivo(numero);
  printf("\n Fatorial de %ld: %ld", numero, resultado);

  return 0;
}

10-
#include <stdio.h>

char*classificaIMC(float imc){
if(imc<18.5){
  return "Abaixo do peso normal";
}
  else if (imc<24.9){
    return "Peso normal";
  }
  else if (imc<29.9){
    return "Excesso de peso";
  }
  else if (imc<34.9){
    return "Obesidade Classe I";
  }
    else if (imc<39.9){
    return "Obesidade Classe II";
  }
  else return "Obesidade Classe III";
}
int main() {
  printf("Classificação: %s", classificaIMC(20.9));

}

11 -
#include <stdio.h>

int somaPA(int elemento, int razao, int numelementos){
  int soma=0;
  for(int i=0; i<numelementos;i++){
    soma=soma+elemento;
    elemento=elemento+razao;
    
  }
  return soma;
}
int main() {
  printf("Soma de n elementos: %d", somaPA(2,3,5));

}

12- #include <stdio.h>
float calculoMulta(float velocidade, float limite){
  float dif=velocidade-limite;
  float porcentagem=dif/limite;
    if(porcentagem<=0.20){
    return 136.16;
  }
  if(porcentagem<=0.50){
    return 195.23;
  }
  else return 880.41;
}

int main() {
 printf("\n Multa: %.2f", calculoMulta(250.0,100.0));
}
